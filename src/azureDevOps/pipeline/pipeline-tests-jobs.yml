parameters:
- name: resource
  type: object
- name: configuration
  type: object

jobs:
  - job: BuildJob
    variables:
      BuildPlatform: 'Any CPU'
      BuildConfiguration: 'Release'
    displayName: Build Job
    steps:
      - checkout: self
        persistCredentials: true

      - task: AzurePowerShell@4
        displayName: Running Unit Tests
        inputs:
          azureSubscription: AzureServiceConnection
          scriptType: "FilePath"
          # scriptPath: $(Build.SourcesDirectory)/examples/run.tests.ps1
          scriptPath: $(Build.SourcesDirectory)/src/azureDevOps/pipeline/run.pipeline.tests.ps1
          scriptArguments: -TestResultsDirectory "$(Build.ArtifactStagingDirectory)/testResults/" -TestScripts "$(Build.SourcesDirectory)/src/azureDevOps/pipeline/pipeline.tests.ps1"
          azurePowerShellVersion: "latestVersion"
          errorActionPreference: "continue"
        env:
          # secrets needs to be mapped as env variables
          personalAccessToken: ${{ parameters.configuration.personalAccessToken }}
          customModulesDirectory: ${{ parameters.configuration.customModulesDirectory }}
          orgUrl: ${{ parameters.configuration.orgUrl }}
          testsTeamProject: ${{ parameters.configuration.testsTeamProject }}
          yamlFilePath: ${{ parameters.resource.tests.yamlFilePath }}
          pipelineId: ${{ parameters.resource.tests.pipelineId }}

      - task: PublishTestResults@2
        inputs:
          testRunner: "NUnit" 
          testResultsFiles: "$(Build.ArtifactStagingDirectory)/testResults/**/testResults.xml"
          testRunTitle: "PS_Win2016_Unit"
          failTaskOnFailedTests: true
        displayName: "Publish Unit Test Results"
        condition: in(variables['Agent.JobStatus'], 'Succeeded', 'SucceededWithIssues', 'Failed')

      - task: PublishCodeCoverageResults@1
        inputs:
          summaryFileLocation: "$(Build.ArtifactStagingDirectory)/testResults/**/coverage.xml"
          failIfCoverageEmpty: false
        displayName: "Publish Unit Test Code Coverage"
        condition: and(in(variables['Agent.JobStatus'], 'Succeeded', 'SucceededWithIssues', 'Failed'), eq(variables['System.PullRequest.IsFork'], false))
        enabled: false