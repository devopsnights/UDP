trigger:
- main
- feature/*

pool:
  vmImage: windows-latest

variables:
  BuildPlatform: 'Any CPU'
  BuildConfiguration: 'Release'

jobs:
  - job: build
    steps:    
      - task: UseDotNet@2
        displayName: 'Install .NET Core SDK'
        inputs:
          version: 5.0.x
          performMultiLevelLookup: true

      - script: |
          dotnet publish -o $(build.artifactstagingdirectory)
      # - task: DotNetCoreCLI@2
      #   displayName: Publish
      #   inputs:
      #     command: publish
      #     publishWebProjects: True
      #     arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
      #     zipAfterPublish: True

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.BinariesDirectory)'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/publish/publish.zip'
          replaceExistingArchive: true

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact'
        inputs:
          PathtoPublish: '$(build.artifactstagingdirectory)/publish'
        condition: succeededOrFailed()

  - deployment: 
    displayName: Azure Web App Deployment
    environment: develop
    dependsOn: build
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'drop'
                downloadPath: '$(System.ArtifactsDirectory)'
            
            - task: AzureWebApp@1
              inputs:
                azureSubscription: 'AzureServiceConnection'
                appName: 'wa-udp-dotnetcore-windows'
                package: $(System.ArtifactsDirectory)/**/*.zip