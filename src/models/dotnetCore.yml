# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
- feature/*

pool:
  vmImage: windows-latest

jobs:
  - job: build
    steps:    
      - task: UseDotNet@2
        displayName: 'Install .NET Core SDK'
        inputs:
          version: 5.0.x
          performMultiLevelLookup: true

      - task: dotnetCoreCLI@2
        displayName: dotnet build
        inputs:
          command: 'build'
          projects: '$(Build.SourcesDirectory)/**/*.csproj'

      - powershell: |
          cd $(Build.SourcesDirectory)/examples/dotnetcore/src
          dotnet publish -o $(Build.ArtifactStagingDirectory)/publish 

      # - task: dotnetCoreCLI@2
      #   displayName: dotnet publish
      #   inputs:
      #     command: 'publish'
      #     publishWebProjects: true
      #     arguments: '--output $(Build.ArtifactStagingDirectory)/publish'

      - task: PublishBuildArtifacts@1
        displayName: publish artifacts
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/publish'
          ArtifactName: 'drop'
          publishLocation: 'Container'

  - deployment: 
    displayName: Azure Web App Deployment
    environment: develop
    dependsOn: build
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'drop'
                downloadPath: '$(System.ArtifactsDirectory)'
            
            - task: AzureRmWebAppDeployment@4
              inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: ${{ parameters.serviceConnection }} # 'ServiceConnection'
                appType: 'webApp'
                WebAppName: ${{ parameters.resource.deployment.name }} #'wa-udp-dotnetCore'
                packageForLinux: '$(System.ArtifactsDirectory)/**/*.zip'