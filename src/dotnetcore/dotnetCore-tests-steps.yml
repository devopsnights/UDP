parameters:
  - name: resource
    type: object
  - name: globalConfiguration
    type: object

steps:
  # - task: AzurePowerShell@4
  #   displayName: Running Unit Tests
  #   inputs:
  #     azureSubscription: AzureServiceConnection
  #     scriptType: "FilePath"
  #     scriptPath: $(Build.SourcesDirectory)/src/azureDevOps/pipeline/run.pipeline.tests.ps1
  #     scriptArguments: -TestResultsDirectory "$(Build.ArtifactStagingDirectory)/testResults/"
  #     azurePowerShellVersion: "latestVersion"
  #     errorActionPreference: "continue"
  #   env:
  #     # mapping global variables
  #     personalAccessToken: ${{ parameters.globalConfiguration.personalAccessToken }}
  #     customModulesDirectory: ${{ parameters.globalConfiguration.customModulesDirectory }}
  #     orgUrl: ${{ parameters.globalConfiguration.orgUrl }}
  #     testsTeamProject: ${{ parameters.globalConfiguration.testsTeamProject }}
  #     repository: ${{ parameters.globalConfiguration.repository }}
  #     serviceConnectionId: ${{ parameters.globalConfiguration.serviceConnectionId }}
  #     #mapping test specific variables
  #     yamlFilePath: ${{ parameters.resource.tests.yamlFilePath }}
  #     pipelineName: ${{ parameters.resource.tests.pipelineName }}
  #     timeoutMinutes: ${{ parameters.resource.tests.timeoutMinutes }}
  #     testFilesToRun: ${{ parameters.resource.tests.complementaryTestsFile }}
  #     skipTeardown: ${{ parameters.resource.tests.skipTeardown }}


  # - ${{ each parameter in parameters }}:
  #   - script: echo ${{ parameter.Key }} 
  #   - script: echo ${{ parameter.Value }}

  - ${{ each parameter in parameters.resource.tests }}:
    - powershell: | 
        Write-Host key: ${{ parameter.Key }} 
        Write-Host value: ${{ parameter.Value }}

  - task: AzurePowerShell@4
    inputs:
      azureSubscription: AzureServiceConnection
      ScriptType: 'InlineScript'
      Inline: 'Write-Host $env:'
      azurePowerShellVersion: 'LatestVersion'
    env:
      customModulesDirectory: ${{ parameters.globalConfiguration.customModulesDirectory }}
      ${{ each parameter in parameters.resource.tests }}:
        ${{ parameter.Key }}: ${{ parameter.Value }} 
        
